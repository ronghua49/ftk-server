apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'

dependencies {


	compile group: 'org.springframework', name: 'spring-beans', version: "$springVersion"
	compile group: 'org.springframework', name: 'spring-context', version: "$springVersion"
	compile group: 'org.springframework', name: 'spring-context-support', version: "$springVersion"
	compile group: 'org.springframework', name: 'spring-web', version: "$springVersion"
	compile group: 'org.springframework', name: 'spring-orm', version: "$springVersion"
	compile group: 'org.springframework', name: 'spring-webmvc', version: "$springVersion"
	//compile group: 'org.springframework.amqp', name: 'spring-rabbit', version: "1.7.1.RELEASE";

	compile group: 'org.apache.commons', name: 'commons-lang3', version: "$commonsLang3Version"
	compile group: 'org.ow2.asm', name: 'asm', version: "$asmVersion"
	compile group: 'com.caucho', name: 'hessian', version: "$hessianVersion"

	compile group: 'commons-httpclient', name: 'commons-httpclient', version: "$commonsHttpClientVersion"
	compile group: 'commons-net', name: 'commons-net', version: "$commonsNetVersion"
	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: "$httpclientVersion"
	compile group: 'org.apache.httpcomponents', name: 'httpmime', version: "$httpclientVersion"

	compile group: 'org.hibernate', name: 'hibernate-core', version: "$hibernateVersion"
	compile group: 'org.hibernate', name: 'hibernate-jpamodelgen', version: "$hibernateVersion"
	compile group: 'org.hibernate', name: 'hibernate-ehcache', version: "$hibernateVersion"
	compile group: 'org.springframework.security', name: 'spring-security-core', version: "$springSecurityVersion"

	compile group: 'com.google.code.gson', name: 'gson', version: "$gsonVersion"
	compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0'

	compile "com.fasterxml.jackson.core:jackson-core:$jackson2Version"
	compile "com.fasterxml.jackson.core:jackson-databind:$jackson2Version"
	compile "com.fasterxml.jackson.core:jackson-annotations:$jackson2Version"
	compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.9.7'
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.7'
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5', version: '2.9.7'
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-joda', version: '2.9.7'
	compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-guava', version: '2.9.7'
	compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.9.7'


	compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: "$bouncyCastleVersion"
	compile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: "$bouncyCastleVersion"
	compile group: 'org.bouncycastle', name: 'bcmail-jdk15on', version: "$bouncyCastleVersion"
	compile group: 'org.bouncycastle', name: 'bcpg-jdk15on', version: "$bouncyCastleVersion"
	compile group: 'org.bouncycastle', name: 'bcprov-ext-jdk15on', version: "$bouncyCastleVersion"

	compile group: 'org.aspectj', name: 'aspectjweaver', version: "$aspectjVersion"

	compile group: 'com.google.zxing', name: 'core', version: '3.3.3'
	compile group: 'com.google.zxing', name: 'javase', version: '3.3.3'

	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.13'

	compile group: 'io.swagger', name: 'swagger-annotations', version: '1.5.21'
	compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'

	// https://mvnrepository.com/artifact/javax.mail/mail
	compile group: 'javax.mail', name: 'mail', version: '1.4.7'

	// https://mvnrepository.com/artifact/com.itextpdf/itextpdf
	compile group: 'com.itextpdf', name: 'itextpdf', version: '5.5.13'
	// https://mvnrepository.com/artifact/com.itextpdf/itext-asian
	compile group: 'com.itextpdf', name: 'itext-asian', version: '5.2.0'
	// https://mvnrepository.com/artifact/com.belerweb/pinyin4j
	compile group: 'com.belerweb', name: 'pinyin4j', version: '2.5.0'

}

eclipse {
	project {
		natures 'org.eclipse.wst.common.project.facet.core.nature'
		natures 'org.eclipse.wst.common.modulecore.ModuleCoreNature'
		natures 'org.eclipse.jem.workbench.JavaEMFNature'
		buildCommand 'org.eclipse.wst.common.project.facet.core.builder'
		buildCommand 'org.eclipse.wst.validation.validationbuilder'
	}
	classpath.file.withXml {
		for (entry in node['classpathentry'].iterator()) {
			if (entry.'@kind' == 'lib') {
				def String path = entry.'@path'
				if (configurations.providedCompile.find { it.path == path }) {
					//							logger.info 'ProvidedCompile Lib Found:' + file(entry.'@path').name
					//							entry.children().clear()
				} else if ((configurations.testCompile - configurations.compile).find { it.path == path }) {
					//							logger.info 'TestCompile Lib Found:' + file(entry.'@path').name
					//							entry.children().clear()
				} else {
					entry.children().clear()
					entry.@exported = "true"
					entry.appendNode('attributes').appendNode('attribute', [
						'name': 'org.eclipse.jst.component.dependency', 'value': '../'
					])
				}
			} else if (entry.'@kind' == 'con') {
				// TODO match sourceCompatibility & targetCompatibility
				entry.'@path' = entry.'@path'.replaceFirst('^org\\.eclipse\\.jdt\\.launching\\.JRE_CONTAINER$', "org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8");
			}
		}
	}
	wtp.facet.file.withXml {
		def Node node = it.asNode();
		node.children().clear();
		node.appendNode('fixed', ['facet': 'jst.java'])
		node.appendNode('fixed', ['facet': 'jst.utility'])
		node.appendNode('installed', ['facet': 'jst.java', 'version': '1.8'])
		node.appendNode('installed', ['facet': 'jst.utility', 'version': '1.0'])
	}
	wtp.component.file.withXml {
		for (wb in it.asNode().'wb-module') {
			for (res in wb.'wb-resource') {
				res.'@deploy-path' = '/';
			}
		}
	}
}

